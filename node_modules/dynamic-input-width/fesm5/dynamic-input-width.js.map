{"version":3,"file":"dynamic-input-width.js","sources":["ng://dynamic-input-width/lib/dynamic-input-width.directive.ts","ng://dynamic-input-width/lib/dynamic-input.module.ts","ng://dynamic-input-width/public-api.ts","ng://dynamic-input-width/dynamic-input-width.ts"],"sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\n\nexport type DynamicWidthDirectiveParams = {\n  minWidth: number;\n  maxWidth: number;\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[dynamicWidth]',\n})\nexport class DynamicWidthDirective implements OnInit, OnDestroy {\n  private unsubscribe: any;\n  private element: HTMLInputElement | HTMLTextAreaElement;\n\n  @Input('dynamicWidth') params: DynamicWidthDirectiveParams;\n\n  constructor(readonly renderer: Renderer2, readonly elementRef: ElementRef) {}\n\n  ngOnInit() {\n    const element = this.elementRef.nativeElement as HTMLElement;\n    const tag = element.tagName.toLowerCase();\n\n    if (tag === 'input' || tag === 'textarea') {\n      this.element = element as HTMLInputElement | HTMLTextAreaElement;\n      this.unsubscribe = this.renderer.listen(\n        this.elementRef.nativeElement,\n        'keyup',\n        () => {\n          this.adjustWidth();\n        }\n      );\n\n      setTimeout(() => {\n        this.adjustWidth();\n      }, 10);\n    }\n  }\n\n  ngOnDestroy() {\n    if (!this.unsubscribe) {\n      return;\n    }\n    this.unsubscribe();\n  }\n\n  // Public metoda pro \"manualni\" prepočet šířky, když se změní model. Input sám o změně bohužel neví\n  // Programátor na to musí pamatovat :(\n  triggerRecalculate() {\n    setTimeout(() => {\n      this.adjustWidth();\n    });\n  }\n\n  private adjustWidth() {\n    const { minWidth, maxWidth } = this.params;\n\n    if (!minWidth || !maxWidth) {\n      return;\n    }\n\n    const fakeElement = document.createElement('span');\n    fakeElement.textContent = this.element.value;\n    // Firefox has annonying behaviour. It does not know the \"shortcut properties\" like 'font' or 'padding'\n    // You have to type the full property name.\n    const styleProps = [\n      'font-size',\n      'font-family',\n      'letter-spacing',\n      'line-height',\n      'padding-left',\n      'padding-height',\n    ];\n    const style = getComputedStyle(this.elementRef.nativeElement);\n    styleProps.forEach((prop) => {\n      fakeElement.style[prop] = style[prop];\n    });\n\n    // get width\n    fakeElement.style.visibility = 'hidden';\n    document.body.append(fakeElement);\n    let width = fakeElement.offsetWidth;\n    fakeElement.remove();\n\n    if (width > maxWidth) {\n      width = maxWidth - 15;\n    }\n\n    if (width > minWidth && width <= maxWidth) {\n      // 26px is \"buffer\", so that the text-ellipsis is not shown.\n      // It used to be 18px. It seems that Chrome has changed behaviour of input boxes.\n      this.element.style.width = `${width + 26}px`;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DynamicWidthDirective } from './dynamic-input-width.directive';\n\n@NgModule({\n  declarations: [DynamicWidthDirective],\n  imports: [],\n  exports: [DynamicWidthDirective],\n})\nexport class DynamicInputModule {}\n","/*\n * Public API Surface of dynamic-input\n */\n\nexport * from './lib/dynamic-input-width.directive';\nexport * from './lib/dynamic-input.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;IAwBE,+BAAqB,QAAmB,EAAW,UAAsB;QAApD,aAAQ,GAAR,QAAQ,CAAW;QAAW,eAAU,GAAV,UAAU,CAAY;KAAI;IAE7E,wCAAQ,GAAR;QAAA,iBAkBC;QAjBC,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,aAA4B,CAAC;QAC7D,IAAM,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QAE1C,IAAI,GAAG,KAAK,OAAO,IAAI,GAAG,KAAK,UAAU,EAAE;YACzC,IAAI,CAAC,OAAO,GAAG,OAAiD,CAAC;YACjE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CACrC,IAAI,CAAC,UAAU,CAAC,aAAa,EAC7B,OAAO,EACP;gBACE,KAAI,CAAC,WAAW,EAAE,CAAC;aACpB,CACF,CAAC;YAEF,UAAU,CAAC;gBACT,KAAI,CAAC,WAAW,EAAE,CAAC;aACpB,EAAE,EAAE,CAAC,CAAC;SACR;KACF;IAED,2CAAW,GAAX;QACE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,OAAO;SACR;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;;;IAID,kDAAkB,GAAlB;QAAA,iBAIC;QAHC,UAAU,CAAC;YACT,KAAI,CAAC,WAAW,EAAE,CAAC;SACpB,CAAC,CAAC;KACJ;IAEO,2CAAW,GAAnB;QACQ,IAAA,gBAAoC,EAAlC,sBAAQ,EAAE,sBAAwB,CAAC;QAE3C,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,EAAE;YAC1B,OAAO;SACR;QAED,IAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACnD,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;;;QAG7C,IAAM,UAAU,GAAG;YACjB,WAAW;YACX,aAAa;YACb,gBAAgB;YAChB,aAAa;YACb,cAAc;YACd,gBAAgB;SACjB,CAAC;QACF,IAAM,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QAC9D,UAAU,CAAC,OAAO,CAAC,UAAC,IAAI;YACtB,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;SACvC,CAAC,CAAC;;QAGH,WAAW,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;QACxC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAClC,IAAI,KAAK,GAAG,WAAW,CAAC,WAAW,CAAC;QACpC,WAAW,CAAC,MAAM,EAAE,CAAC;QAErB,IAAI,KAAK,GAAG,QAAQ,EAAE;YACpB,KAAK,GAAG,QAAQ,GAAG,EAAE,CAAC;SACvB;QAED,IAAI,KAAK,GAAG,QAAQ,IAAI,KAAK,IAAI,QAAQ,EAAE;;;YAGzC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAM,KAAK,GAAG,EAAE,OAAI,CAAC;SAC9C;KACF;;gBA5E8B,SAAS;gBAAuB,UAAU;;IAFlD;QAAtB,KAAK,CAAC,cAAc,CAAC;yDAAqC;IAJhD,qBAAqB;QAJjC,SAAS,CAAC;;YAET,QAAQ,EAAE,gBAAgB;SAC3B,CAAC;OACW,qBAAqB,CAmFjC;IAAD,4BAAC;CAnFD;;;ICVA;KAAkC;IAArB,kBAAkB;QAL9B,QAAQ,CAAC;YACR,YAAY,EAAE,CAAC,qBAAqB,CAAC;YACrC,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,CAAC,qBAAqB,CAAC;SACjC,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAlC;;ACRA;;;;ACAA;;;;;;"}